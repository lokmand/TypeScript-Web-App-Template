{"version":3,"sources":["main.ts"],"names":["img","Image","html_element","document","getElementsByTagName","webp_class","ele","webp_support","classList","add","onload","height","width","onerror","src"],"mappings":"CAIA,WACE,IAAMA,EAAM,IAAIC,MAGVC,EAAwBC,SAASC,qBAAqB,QAAQ,GAGpE,SAASC,EAAWC,EAAcC,GAC5BA,EACFD,EAAIE,UAAUC,IAAI,QAElBH,EAAIE,UAAUC,IAAI,WAItBT,EAAIU,OAAS,WACX,IAAMH,KAA+B,EAAbP,EAAIW,QAA0B,EAAZX,EAAIY,OAC9CP,EAAWH,EAAcK,IAG3BP,EAAIa,QAAU,WACZR,EAAWH,GAAc,IAG3BF,EAAIc,IAAM,sBAxBZ","file":"../main.js","sourcesContent":["/* Check if the browser has WebP support, if it does, the class \"webp\" wil be\n * added to the <html> tag. If the browser does not support WebP - it will add\n * the class \"no-webp\" to the tag instead.\n*/\n(() => {\n  const img = new Image();\n\n  /* Set classes to determine which pics to load */\n  const html_element: Element = document.getElementsByTagName(\"html\")[0];\n\n  /* Helper function to keep it DRY */\n  function webp_class(ele: Element, webp_support: boolean) {\n    if (webp_support) {\n      ele.classList.add(\"webp\");\n    } else {\n      ele.classList.add(\"no-webp\");\n    }\n  }\n\n  img.onload = () => {\n    const webp_support = !!(img.height > 0 && img.width > 0);\n    webp_class(html_element, webp_support);\n  };\n\n  img.onerror = () => {\n    webp_class(html_element, false);\n  };\n\n  img.src = \"img/test_pixel.webp\";\n})();\n"]}